language: python
python:
  - 3.6
notifications:
  email: false
  
before_install:
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a

install: true


# Run test
jobs:
  include:
    - stage: formatting
      name: "formatting test"
      install:
        - pip install black
      script:
        - black --check .
    - stage: documentation
      name: "documentation test"
      install:
        - pip install sphinx sphinx_rtd_theme sphinxcontrib-apidoc pyyaml numpy
      script:
        - sphinx-build -W -v -b html docs/ docs/_build/
    - stage: general_tests
      name: "General Tests"
      install:
        - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION tensorflow=1.13.1
        - source activate test-environment
        - conda install pytorch-cpu torchvision-cpu -c pytorch
        - pip install tensorboardX
        - python setup.py install
      script:
        - python -c "import skimage" # fix failing test due to static tls loading
        - pytest --ignore=examples # use pytest instead of python -m pytest
    - stage: tf_example_tests
      name: "Tensorflow examples test"
      install:
        - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION tensorflow=1.13.1
        - source activate test-environment
        - python setup.py install
      script:
        - cd examples
        - python -m pytest -k tf
    - stage: torch_example_tests
      name: "Pytorch examples test"
      install:
        - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
        - source activate test-environment
        - conda install pytorch-cpu torchvision-cpu -c pytorch
        - pip install tensorboardX
        - python setup.py install
      script:
        - cd examples
        - python -m pytest -k torch

deploy:
  provider: pypi
  user: "jhaux"
  password:
    secure: "yCTYOAbzCFK6aeKQSn2Q4XW5DN5/Gy0/4NmbFF4y07HcqBw2A7XOF7eQcsgNMSiMLu3IrY8iNuZL1urVn7k/m3V5xdQXcYtNJN1ZDcmKKOZHCp+uZoHTw6VzsNA8LhTXJbE9K1rLlfvzPEzoG/YedXpe7KGN7seMk+/w5dBUqzs30appqX395fQ7yfvsRd7h0B67HhtaGAlmumtqwqwRsMLgjGFxT0nW8lduziDfc0UhtvA3XX+Jbl5R8zXlEYg+44nqr2SyFEQN8am0Ig+mb1qkdoH7/QkB96tXMJkjxdKOmqm31uaHXP7AJ5ptTtHghZteiFxxzhQtVl7FH4GFJSwRhlybYbdSaNiNN8DDyW8cWxibDBnljg434o8jDk0npou5o4bsUQp/BiBELrRkEZiUk/pbph6N/WAIAW7GR3p2r2uxbINjr0iWnY8/VzajTgdGgsONAnnPMXlCYJYcK/cOphZzQu/Gm8lYVPRts9IbRW2kSfiWXCejct74nK7vmyFnN5LNK5C/QFVjBMJCOxmhf0Mv6zpI42o3/Xn7qdPkU6mEjPLVF8NeuYYi8HIb5Gk44zzoblnfPN8QZgjYRwYlMKMhKofzPZ02G2eOv5fO63fKfzFnEQWkndJKuVJ0+nKkRWMvjfcIHS3Upp9iTsXxirUva+Amz/bHbbcSTAI="
  on:
    tags: true