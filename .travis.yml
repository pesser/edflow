language: python
python:
- 3.6
notifications:
  email: false
before_install:
- if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh
  -O miniconda.sh; else wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
  -O miniconda.sh; fi
- bash miniconda.sh -b -p $HOME/miniconda
- export PATH="$HOME/miniconda/bin:$PATH"
- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda update -q conda
- conda info -a
install: true
after_success:
- coveralls
deploy:
  provider: pypi
  user: __token__
  password:
    secure: gMPTXF4A8jCoWZZ7LhzFY0ewlWA5TAyf1CY4eV+C7fW7DTI8f5g/vOWEhovX3txzr4lg74IUBXAFkIbk86cF3FJOrJbHbuKAaaBcOg/3+QY6CeYx8SGEs+jvrR/wjiDdXx1W3MwC5M2DHPdKSnA/akzg0B1XdcbLf233zvcrj8/Wd0N6/6pcrZQk1UKQ6joBMOGVhv23v5Mrqe65vy1dPndXJRZOTJFnp1QCyLLjhzBaItVOvfdLZ9AOiReF4aGBmNUKR62oH8Ag4AZmBykoIfFcCAHHitiZ74W2AivNiEZOf1vxXFdTqjZqSraLetA5tJX2oicFkuCX/NsziqFlGMBMcM3etju09BsLJ0DDNc0xEnJDOONVF3WdzIJ5BNVvpaqp2OMEE4niTu/WjQIxXU+O3uIo8wFSWFbk4cRF02uPFV3jSlx9HD1mwChh3sehwUIsb/edTKIWJfjskrLwS8o30ebnNkV+SrjYH6xp6Sv4P/Dhb6DOdTThiIJsE3FzzC+6C8Qbco2A4pvmr9z1xqHNPv0pq6ZW61Y/7PZ6xOm6dcKxsvjEmq7Yn/LYMpsy0ThXz2kZx3Q8oFnw55H9/aBwEK3Yo9ADd2UkbboqlFYEHQqffBTORYf7NpPMN0rWzRQfGU84gbAYrFaV36hPbcVD3Qfjv5h95KTYvqWpusU=
  on:
    tags: true
    branch:
    - pypi_release
    - "/v?(\\d+\\.)?(\\d+\\.)?(\\*|\\d+)$/"
jobs:
  include:
  - stage: formatting
    name: formatting test
    install:
    - pip install black
    script:
    - black --check .
    after_success: skip
    #  - stage: documentation
    #    name: documentation test
    #    install:
    #    - pip install sphinx sphinx_rtd_theme sphinxcontrib-apidoc pyyaml numpy better_apidoc
    #    script:
    #    - cd docs
    #    - sphinx-build -W -v -b html . _build/
    #    after_success: skip
    #  - stage: tf_example_tests
    #    name: Tensorflow examples test
    #    install:
    #    - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION tensorflow=1.13.1
    #    - source activate test-environment
    #    - pip install -e .[test]
    #    script:
    #    - cd examples
    #    - pytest --cov edflow -k tf --cov-config .coveragerc --cov-append
    #    - cd ..
    #  - stage: torch_example_tests
    #    name: Pytorch examples test
    #    install:
    #    - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION
    #    - source activate test-environment
    #    - conda install pytorch-cpu torchvision-cpu -c pytorch
    #    - pip install tensorboardX
    #    - pip install -e .[test]
    #    script:
    #    - cd examples
    #    - pytest --cov edflow -k torch --cov-config .coveragerc --cov-append
    #    - cd ..
    #  - stage: general_tests
    #    name: General Tests
    #    install:
    #    - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION tensorflow=1.13.1
    #    - source activate test-environment
    #    - conda install pytorch-cpu torchvision-cpu -c pytorch
    #    - pip install tensorboardX
    #    - pip install -e .[test]
    #    script:
    #    - python -c "import skimage"
    #    - pytest --cov edflow --cov-config .coveragerc --ignore=examples
